import lejos.hardware.motor.EV3LargeRegulatedMotor;
import lejos.hardware.port.MotorPort;
import lejos.hardware.port.Port;
import lejos.utility.Delay;

public class DifferentialDrive {

	public EV3LargeRegulatedMotor mLeftMotor;
	public EV3LargeRegulatedMotor mRightMotor;

	private final static int SPEED = 500;



	public DifferentialDrive (Port left_port, Port right_port){
		mLeftMotor = new EV3LargeRegulatedMotor(left_port);
		mRightMotor = new EV3LargeRegulatedMotor(right_port);

	}


	public void forward(){ //fait avancer la robot
		mLeftMotor.setSpeed(SPEED);
		mRightMotor.setSpeed(SPEED);
		
		mLeftMotor.forward();
		mRightMotor.forward();
	}

	public void stop(){ //arrête le robot
		System.out.println("stop");
		mLeftMotor.rotate(0,true);
		mRightMotor.rotate(0,true);

	}


	public void rotateClockwise(){ //le robot fait un tour sur lui même dans le sens des aiguilles
		mLeftMotor.forward();
		mRightMotor.backward();
	}


	public void rotateCounterClockwise(){ //le robot fait un tour sur lui même dans le sens inverse des aiguilles
		mLeftMotor.backward();
		mRightMotor.forward();
	}

	public void demiTour() { //le robot fait une rotation à 180degres
		System.out.println("tour sur lui meme");	
		mLeftMotor.rotate(810,true);
		mRightMotor.rotate(-810,true);

	}

	public void pivote(int a) {
		// le robot effectue une rotation par la droite de a degres
		mLeftMotor.rotate(a,true);
		mRightMotor.rotate(-a,true);
	}

	public boolean isMoving() { //renvoie true si le robot est en mouvement, false sinon
		if(this.mLeftMotor.isMoving()==true && this.mRightMotor.isMoving()==true)
			return true;
		return false;
	}

	public void recule() { //le robot recule pendant un certain temps (delay à modifier)
		mLeftMotor.setSpeed(SPEED);
		mRightMotor.setSpeed(SPEED);
		mLeftMotor.backward();
		mRightMotor.backward();
		Delay.msDelay(3000);
		stop();
	}

	public void esquive() { //esquive un obstacle
		//stop();
		System.out.println("esquive");
		pivote(100);
		Delay.msDelay(1000);
		forward();
		Delay.msDelay(2000);
		pivote(-80);
	}
}
