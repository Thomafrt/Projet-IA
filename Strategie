
import java.util.Arrays;
import java.util.List;
import java.util.ArrayList;

import lejos.hardware.Button;
import lejos.hardware.port.MotorPort;
import lejos.hardware.port.SensorPort;
import lejos.utility.Delay;

public class Strategie{

	TouchSensor t;
	DifferentialDrive m;
	Ultrasonic uS;
	Pince p;
	ColorSensor c;
	private int angle;


	public Strategie() {
		t = new TouchSensor(SensorPort.S4);
		m = new DifferentialDrive(MotorPort.A,MotorPort.B);
		uS = new Ultrasonic(SensorPort.S2);
		p = new Pince (MotorPort.C);
		c = new ColorSensor(SensorPort.S1);
		angle=0;
	}

	public void premierPalet() { //avance et recupere un palet et le met derriere la ligne blanche
		System.out.println("Mode : Recherche du premier palet");
		int i=0;
		while(i<1) { //tant que i inférieur à 1
			p.open();
			Delay.msDelay(1000);
			while (! t.isPressed()){ //tant que le touch nest pas touché
				m.forward();
				System.out.println("cherche palet");
			}
			m.stop();
			Delay.msDelay(1000);
			p.close();
			Delay.msDelay(1000);
			System.out.println("Mode : Ramene le premier palet");
			m.esquive();
			Delay.msDelay(2000);

			while(c.getColorID()!= 6) { //tant qu'on ne détecte pas de blanc
				m.forward();
				System.out.println("blanc");
			}
			m.stop();
			p.open();
			i=1;
		}
		apres();
	}

	public void detecte() { //le robot fait un tour sur lui même pour detecter le palet le plus proche et se place face à lui
		System.out.println("Mode : Detection du palet le plus proche");

		List <Float> liste= new ArrayList<Float> ();
		m.demiTour();

		while(m.isMoving()==true) { //tant que le demi tour n'est pas fini
			float i = uS.getDistance();
			liste.add(i);
			Delay.msDelay(10);
			//System.out.println(i);
		}

		int indice=0;
		float val=1000;

		for(int i=0; i<liste.size()-1;i++) { //tant qu'on a pas parcouru toute la liste
			float diff=liste.get(i)-liste.get(i+1);

			if (liste.get(i)>0.35 && liste.get(i)<val) { //si l'indice i est supp à 0.3 ET inférieur à val et pas de val infini
				val=liste.get(i);						         // et que la diff ? && (diff>0.2 || diff<-0.2) et  && i != Float.POSITIVE_INFINITY
				indice=i;
			}
		}
		angle=(int) (1050/liste.size()*indice);
		m.vitesse();
		m.pivote(angle);

		Delay.msDelay(3000);
		System.out.println("angle :"+angle);
		System.out.println("valeur :"+val);
		System.out.println("liste :"+liste.size());

		vaChercher();
		//		Delay.msDelay(10000);
	}

	public void vaChercher() {
		//le robot avance vers l'objet détecté en ouvrant les pinces, si c'est un palet il lattrappe se remet face au but adverse
		//sinon repasse en mode detection
		System.out.println("Mode : Cherche le palet");
		List <Float> liste= new ArrayList<Float> ();
		float v=0;
		liste.add(v);

		m.forward();
		while(m.isMoving()==true) { //tant que le robot avance
			p.open();

			float i = uS.getDistance();
			if(i>0.3){// si on ne detetecte pas de mur ni de valeur infini
				//System.out.println(i);
				liste.add(i);
				float val1=liste.get(0);
				float val2=liste.get(1);
				if( t.isPressed() || val1-val2>0 ) { //on détecte un palet (il y a un saut dans les valeurs)

					if (t.isPressed()) {
						//si le touch est touché

						angle=-angle;
						m.pivote(angle);
						Delay.msDelay(3000);


						angle=0;

						m.stop();
						p.close();
						vaMarquer();
					}
				}
			}
			else {
				m.stop(); //sinon on s'arrete et on s'écarte et repasse en detection
				p.close();
				Delay.msDelay(1000);

				angle=-angle;
				m.pivote(angle);
				Delay.msDelay(3000);

				angle=0;
				//TODO

				detecte();
			}
		}
	}

	public void vaMarquer() { //amène le palet derriere la ligne, puis se replace au centre du plateau et recherche un palet
		System.out.println("Mode : Marquer un but");

		angle=-angle;
		m.pivote(angle);
		Delay.msDelay(3000);
		m.vitesse();
		m.forward();
		angle=0;
		while(c.getColorID()!= 6) { //tant qu'on ne détecte pas de blanc
			m.forward();
		}
		m.stop();
		p.open();
		apres();
	}

	public void apres() { //se replace au centre du plateau et recherche un palet
		System.out.println("apres");
		m.recule();
		p.close();
		detecte();		
	}

	public void run() { //Lance le programme apres avoir pressé un bouton
		System.out.println("Appuyez pour lancer le robot");
		Button.waitForAnyPress();
		premierPalet();
	}

	public void izi() {
		//	p.open();
		p.close();
		//	m.forward();
		//	Delay.msDelay(100);
		//	m.stop();
		//	m.esquive();
	}


	public static void main(String[] args) {
		Strategie s=new Strategie();
		//p.c();
		//s.premierPalet();
		//s.izi();
		s.run();
		//DifferentialDrive m2 = new DifferentialDrive(MotorPort.A,MotorPort.B);
		//s.detecte();
		//s.vaChercher();
		//m2.demiTour();



		/*		Pince p=new Pince(MotorPort.C);
		//Pince p = new Pince (MotorPort.C);
		//p.close();

		Delay.msDelay(3000);
		 */



	}

}

